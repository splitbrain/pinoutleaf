#!/usr/bin/env node
var qt=Object.create;var gt=Object.defineProperty;var Qt=Object.getOwnPropertyDescriptor;var te=Object.getOwnPropertyNames;var ee=Object.getPrototypeOf,re=Object.prototype.hasOwnProperty;var ne=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var oe=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of te(t))!re.call(e,o)&&o!==r&&gt(e,o,{get:()=>t[o],enumerable:!(n=Qt(t,o))||n.enumerable});return e};var ie=(e,t,r)=>(r=e!=null?qt(ee(e)):{},oe(t||!e||!e.__esModule?gt(r,"default",{value:e,enumerable:!0}):r,e));var Kt=ne((P,A)=>{var ae=200,It="__lodash_hash_undefined__",ce=800,fe=16,Et=9007199254740991,St="[object Arguments]",le="[object Array]",he="[object AsyncFunction]",ue="[object Boolean]",pe="[object Date]",de="[object Error]",$t="[object Function]",ge="[object GeneratorFunction]",me="[object Map]",be="[object Number]",ye="[object Null]",At="[object Object]",xe="[object Proxy]",we="[object RegExp]",Be="[object Set]",_e="[object String]",ve="[object Undefined]",Te="[object WeakMap]",Ce="[object ArrayBuffer]",Ie="[object DataView]",Ee="[object Float32Array]",Se="[object Float64Array]",$e="[object Int8Array]",Ae="[object Int16Array]",Oe="[object Int32Array]",Fe="[object Uint8Array]",Pe="[object Uint8ClampedArray]",je="[object Uint16Array]",Ge="[object Uint32Array]",Re=/[\\^$.*+?()[\]{}|]/g,Ue=/^\[object .+?Constructor\]$/,ze=/^(?:0|[1-9]\d*)$/,u={};u[Ee]=u[Se]=u[$e]=u[Ae]=u[Oe]=u[Fe]=u[Pe]=u[je]=u[Ge]=!0;u[St]=u[le]=u[Ce]=u[ue]=u[Ie]=u[pe]=u[de]=u[$t]=u[me]=u[be]=u[At]=u[we]=u[Be]=u[_e]=u[Te]=!1;var Ot=typeof global=="object"&&global&&global.Object===Object&&global,De=typeof self=="object"&&self&&self.Object===Object&&self,R=Ot||De||Function("return this")(),Ft=typeof P=="object"&&P&&!P.nodeType&&P,j=Ft&&typeof A=="object"&&A&&!A.nodeType&&A,Pt=j&&j.exports===Ft,ot=Pt&&Ot.process,bt=function(){try{var e=j&&j.require&&j.require("util").types;return e||ot&&ot.binding&&ot.binding("util")}catch{}}(),yt=bt&&bt.isTypedArray;function Ne(e,t,r){switch(r.length){case 0:return e.call(t);case 1:return e.call(t,r[0]);case 2:return e.call(t,r[0],r[1]);case 3:return e.call(t,r[0],r[1],r[2])}return e.apply(t,r)}function He(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}function Le(e){return function(t){return e(t)}}function Me(e,t){return e?.[t]}function Xe(e,t){return function(r){return e(t(r))}}var Ke=Array.prototype,Ye=Function.prototype,W=Object.prototype,it=R["__core-js_shared__"],V=Ye.toString,_=W.hasOwnProperty,xt=function(){var e=/[^.]+$/.exec(it&&it.keys&&it.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),jt=W.toString,Ze=V.call(Object),ke=RegExp("^"+V.call(_).replace(Re,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Z=Pt?R.Buffer:void 0,wt=R.Symbol,Bt=R.Uint8Array,_t=Z?Z.allocUnsafe:void 0,Gt=Xe(Object.getPrototypeOf,Object),vt=Object.create,We=W.propertyIsEnumerable,Ve=Ke.splice,E=wt?wt.toStringTag:void 0,k=function(){try{var e=ht(Object,"defineProperty");return e({},"",{}),e}catch{}}(),Je=Z?Z.isBuffer:void 0,Tt=Math.max,qe=Date.now,Rt=ht(R,"Map"),G=ht(Object,"create"),Qe=function(){function e(){}return function(t){if(!$(t))return{};if(vt)return vt(t);e.prototype=t;var r=new e;return e.prototype=void 0,r}}();function S(e){var t=-1,r=e==null?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function tr(){this.__data__=G?G(null):{},this.size=0}function er(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}function rr(e){var t=this.__data__;if(G){var r=t[e];return r===It?void 0:r}return _.call(t,e)?t[e]:void 0}function nr(e){var t=this.__data__;return G?t[e]!==void 0:_.call(t,e)}function or(e,t){var r=this.__data__;return this.size+=this.has(e)?0:1,r[e]=G&&t===void 0?It:t,this}S.prototype.clear=tr;S.prototype.delete=er;S.prototype.get=rr;S.prototype.has=nr;S.prototype.set=or;function v(e){var t=-1,r=e==null?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function ir(){this.__data__=[],this.size=0}function sr(e){var t=this.__data__,r=J(t,e);if(r<0)return!1;var n=t.length-1;return r==n?t.pop():Ve.call(t,r,1),--this.size,!0}function ar(e){var t=this.__data__,r=J(t,e);return r<0?void 0:t[r][1]}function cr(e){return J(this.__data__,e)>-1}function fr(e,t){var r=this.__data__,n=J(r,e);return n<0?(++this.size,r.push([e,t])):r[n][1]=t,this}v.prototype.clear=ir;v.prototype.delete=sr;v.prototype.get=ar;v.prototype.has=cr;v.prototype.set=fr;function O(e){var t=-1,r=e==null?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function lr(){this.size=0,this.__data__={hash:new S,map:new(Rt||v),string:new S}}function hr(e){var t=Q(this,e).delete(e);return this.size-=t?1:0,t}function ur(e){return Q(this,e).get(e)}function pr(e){return Q(this,e).has(e)}function dr(e,t){var r=Q(this,e),n=r.size;return r.set(e,t),this.size+=r.size==n?0:1,this}O.prototype.clear=lr;O.prototype.delete=hr;O.prototype.get=ur;O.prototype.has=pr;O.prototype.set=dr;function F(e){var t=this.__data__=new v(e);this.size=t.size}function gr(){this.__data__=new v,this.size=0}function mr(e){var t=this.__data__,r=t.delete(e);return this.size=t.size,r}function br(e){return this.__data__.get(e)}function yr(e){return this.__data__.has(e)}function xr(e,t){var r=this.__data__;if(r instanceof v){var n=r.__data__;if(!Rt||n.length<ae-1)return n.push([e,t]),this.size=++r.size,this;r=this.__data__=new O(n)}return r.set(e,t),this.size=r.size,this}F.prototype.clear=gr;F.prototype.delete=mr;F.prototype.get=br;F.prototype.has=yr;F.prototype.set=xr;function wr(e,t){var r=ft(e),n=!r&&ct(e),o=!r&&!n&&Nt(e),i=!r&&!n&&!o&&Lt(e),a=r||n||o||i,s=a?He(e.length,String):[],c=s.length;for(var l in e)(t||_.call(e,l))&&!(a&&(l=="length"||o&&(l=="offset"||l=="parent")||i&&(l=="buffer"||l=="byteLength"||l=="byteOffset")||zt(l,c)))&&s.push(l);return s}function st(e,t,r){(r!==void 0&&!tt(e[t],r)||r===void 0&&!(t in e))&&lt(e,t,r)}function Br(e,t,r){var n=e[t];(!(_.call(e,t)&&tt(n,r))||r===void 0&&!(t in e))&&lt(e,t,r)}function J(e,t){for(var r=e.length;r--;)if(tt(e[r][0],t))return r;return-1}function lt(e,t,r){t=="__proto__"&&k?k(e,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):e[t]=r}var _r=Gr();function q(e){return e==null?e===void 0?ve:ye:E&&E in Object(e)?Rr(e):Lr(e)}function Ct(e){return U(e)&&q(e)==St}function vr(e){if(!$(e)||Nr(e))return!1;var t=pt(e)?ke:Ue;return t.test(Yr(e))}function Tr(e){return U(e)&&Ht(e.length)&&!!u[q(e)]}function Cr(e){if(!$(e))return Hr(e);var t=Dt(e),r=[];for(var n in e)n=="constructor"&&(t||!_.call(e,n))||r.push(n);return r}function Ut(e,t,r,n,o){e!==t&&_r(t,function(i,a){if(o||(o=new F),$(i))Ir(e,t,a,r,Ut,n,o);else{var s=n?n(at(e,a),i,a+"",e,t,o):void 0;s===void 0&&(s=i),st(e,a,s)}},Mt)}function Ir(e,t,r,n,o,i,a){var s=at(e,r),c=at(t,r),l=a.get(c);if(l){st(e,r,l);return}var f=i?i(s,c,r+"",e,t,a):void 0,h=f===void 0;if(h){var g=ft(c),y=!g&&Nt(c),m=!g&&!y&&Lt(c);f=c,g||y||m?ft(s)?f=s:Zr(s)?f=Fr(s):y?(h=!1,f=$r(c,!0)):m?(h=!1,f=Or(c,!0)):f=[]:kr(c)||ct(c)?(f=s,ct(s)?f=Wr(s):(!$(s)||pt(s))&&(f=Ur(c))):h=!1}h&&(a.set(c,f),o(f,c,n,i,a),a.delete(c)),st(e,r,f)}function Er(e,t){return Xr(Mr(e,t,Xt),e+"")}var Sr=k?function(e,t){return k(e,"toString",{configurable:!0,enumerable:!1,value:Jr(t),writable:!0})}:Xt;function $r(e,t){if(t)return e.slice();var r=e.length,n=_t?_t(r):new e.constructor(r);return e.copy(n),n}function Ar(e){var t=new e.constructor(e.byteLength);return new Bt(t).set(new Bt(e)),t}function Or(e,t){var r=t?Ar(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.length)}function Fr(e,t){var r=-1,n=e.length;for(t||(t=Array(n));++r<n;)t[r]=e[r];return t}function Pr(e,t,r,n){var o=!r;r||(r={});for(var i=-1,a=t.length;++i<a;){var s=t[i],c=n?n(r[s],e[s],s,r,e):void 0;c===void 0&&(c=e[s]),o?lt(r,s,c):Br(r,s,c)}return r}function jr(e){return Er(function(t,r){var n=-1,o=r.length,i=o>1?r[o-1]:void 0,a=o>2?r[2]:void 0;for(i=e.length>3&&typeof i=="function"?(o--,i):void 0,a&&zr(r[0],r[1],a)&&(i=o<3?void 0:i,o=1),t=Object(t);++n<o;){var s=r[n];s&&e(t,s,n,i)}return t})}function Gr(e){return function(t,r,n){for(var o=-1,i=Object(t),a=n(t),s=a.length;s--;){var c=a[e?s:++o];if(r(i[c],c,i)===!1)break}return t}}function Q(e,t){var r=e.__data__;return Dr(t)?r[typeof t=="string"?"string":"hash"]:r.map}function ht(e,t){var r=Me(e,t);return vr(r)?r:void 0}function Rr(e){var t=_.call(e,E),r=e[E];try{e[E]=void 0;var n=!0}catch{}var o=jt.call(e);return n&&(t?e[E]=r:delete e[E]),o}function Ur(e){return typeof e.constructor=="function"&&!Dt(e)?Qe(Gt(e)):{}}function zt(e,t){var r=typeof e;return t=t??Et,!!t&&(r=="number"||r!="symbol"&&ze.test(e))&&e>-1&&e%1==0&&e<t}function zr(e,t,r){if(!$(r))return!1;var n=typeof t;return(n=="number"?ut(r)&&zt(t,r.length):n=="string"&&t in r)?tt(r[t],e):!1}function Dr(e){var t=typeof e;return t=="string"||t=="number"||t=="symbol"||t=="boolean"?e!=="__proto__":e===null}function Nr(e){return!!xt&&xt in e}function Dt(e){var t=e&&e.constructor,r=typeof t=="function"&&t.prototype||W;return e===r}function Hr(e){var t=[];if(e!=null)for(var r in Object(e))t.push(r);return t}function Lr(e){return jt.call(e)}function Mr(e,t,r){return t=Tt(t===void 0?e.length-1:t,0),function(){for(var n=arguments,o=-1,i=Tt(n.length-t,0),a=Array(i);++o<i;)a[o]=n[t+o];o=-1;for(var s=Array(t+1);++o<t;)s[o]=n[o];return s[t]=r(a),Ne(e,this,s)}}function at(e,t){if(!(t==="constructor"&&typeof e[t]=="function")&&t!="__proto__")return e[t]}var Xr=Kr(Sr);function Kr(e){var t=0,r=0;return function(){var n=qe(),o=fe-(n-r);if(r=n,o>0){if(++t>=ce)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}function Yr(e){if(e!=null){try{return V.call(e)}catch{}try{return e+""}catch{}}return""}function tt(e,t){return e===t||e!==e&&t!==t}var ct=Ct(function(){return arguments}())?Ct:function(e){return U(e)&&_.call(e,"callee")&&!We.call(e,"callee")},ft=Array.isArray;function ut(e){return e!=null&&Ht(e.length)&&!pt(e)}function Zr(e){return U(e)&&ut(e)}var Nt=Je||qr;function pt(e){if(!$(e))return!1;var t=q(e);return t==$t||t==ge||t==he||t==xe}function Ht(e){return typeof e=="number"&&e>-1&&e%1==0&&e<=Et}function $(e){var t=typeof e;return e!=null&&(t=="object"||t=="function")}function U(e){return e!=null&&typeof e=="object"}function kr(e){if(!U(e)||q(e)!=At)return!1;var t=Gt(e);if(t===null)return!0;var r=_.call(t,"constructor")&&t.constructor;return typeof r=="function"&&r instanceof r&&V.call(r)==Ze}var Lt=yt?Le(yt):Tr;function Wr(e){return Pr(e,Mt(e))}function Mt(e){return ut(e)?wr(e,!0):Cr(e)}var Vr=jr(function(e,t,r){Ut(e,t,r)});function Jr(e){return function(){return e}}function Xt(e){return e}function qr(){return!1}A.exports=Vr});import{createWindow as en}from"svgdom";var p=class{constructor(t,r={},n=[]){this.name=t,this.attrs={...r},this.children=[...n],this.textContent=null}append(t){return this.children.push(t),this}prepend(t){return this.children.unshift(t),this}setAttr(t,r){return this.attrs[t]=r,this}static getCombinedBoundingBox(t){if(!t||t.length===0)return null;let r=1/0,n=1/0,o=-1/0,i=-1/0,a=!1;for(let s of t)if(typeof s?.getBoundingBox=="function"){let c=s.getBoundingBox();c&&(r=Math.min(r,c.x),n=Math.min(n,c.y),o=Math.max(o,c.x+c.width),i=Math.max(i,c.y+c.height),a=!0)}return a?{x:r,y:n,width:o-r,height:i-n}:null}getBoundingBox(){if(this.children.length===0)return null;let t=1/0,r=1/0,n=-1/0,o=-1/0,i=!1;for(let a of this.children){let s=a.getBoundingBox();s&&(t=Math.min(t,s.x),r=Math.min(r,s.y),n=Math.max(n,s.x+s.width),o=Math.max(o,s.y+s.height),i=!0)}return i?{x:t,y:r,width:n-t,height:o-r}:null}render(t){let r=t.createElementNS("http://www.w3.org/2000/svg",this.name);for(let[n,o]of Object.entries(this.attrs))typeof n=="string"&&o!=null&&r.setAttribute(String(n),String(o));for(let n of this.children)r.appendChild(n.render(t));return this.textContent!==null&&(r.textContent=this.textContent),r}};var mt="data:font/woff2;base64,";var z=class extends p{constructor(t=[]){super("defs",{},t);let r=new p("style",{type:"text/css"});r.textContent=`
      @font-face {
        font-family: 'Roboto Mono';
        src: url('${mt}') format('woff2');
      }
    `,this.append(r);let n=new p("filter",{id:"grayscale"});n.append(new p("feColorMatrix",{type:"saturate",values:"0"})),this.append(n)}render(t){let r=super.render(t);for(let n of this.children)if(n.textContent){let o=r.childNodes[this.children.indexOf(n)];o.textContent=n.textContent}return r}};var D=class extends p{constructor(){super("svg",{xmlns:"http://www.w3.org/2000/svg"}),this.defs=new z,this.append(this.defs)}getBoundingBox(){let t=super.getBoundingBox();return t?(this.setAttr("viewBox",`${t.x} ${t.y} ${t.width} ${t.height}`),this.setAttr("width",t.width/100+"mm"),this.setAttr("height",t.height/100+"mm"),t):{x:0,y:0,width:0,height:0}}};var d=class extends p{constructor(t={},r=[]){super("g",t,r),this.tx=0,this.ty=0,this.angle=0,this.padding={top:0,right:0,bottom:0,left:0}}setPadding(t){return typeof t=="number"?this.padding={top:t,right:t,bottom:t,left:t}:typeof t=="object"&&(this.padding={top:t.top??this.padding.top,right:t.right??this.padding.right,bottom:t.bottom??this.padding.bottom,left:t.left??this.padding.left}),this}setTranslate(t,r){return this.tx=t,this.ty=r,delete this.attrs.transform,this}setRotation(t){return t%90!==0&&(console.warn(`Group rotation angle must be a multiple of 90. Received ${t}. Clamping to nearest 90.`),t=Math.round(t/90)*90),this.angle=(t%360+360)%360,delete this.attrs.transform,this}getBoundingBox(){let t=super.getBoundingBox();if(!t)return null;let r={x:t.x-this.padding.left,y:t.y-this.padding.top,width:t.width+this.padding.left+this.padding.right,height:t.height+this.padding.top+this.padding.bottom};if(this.angle===0&&this.tx===0&&this.ty===0)return r;let n=r.x+r.width/2,o=r.y+r.height/2,a=[{x:r.x,y:r.y},{x:r.x+r.width,y:r.y},{x:r.x+r.width,y:r.y+r.height},{x:r.x,y:r.y+r.height}].map(h=>{let g=h.x-n,y=h.y-o,m,I;switch(this.angle){case 90:m=-y,I=g;break;case 180:m=-g,I=-y;break;case 270:m=y,I=-g;break;default:m=g,I=y;break}return{x:m+n+this.tx,y:I+o+this.ty}}),s=1/0,c=1/0,l=-1/0,f=-1/0;return a.forEach(h=>{s=Math.min(s,h.x),c=Math.min(c,h.y),l=Math.max(l,h.x),f=Math.max(f,h.y)}),{x:s,y:c,width:l-s,height:f-c}}render(t){let r=super.render(t),n="",o=this.tx!==0||this.ty!==0?`translate(${this.tx} ${this.ty})`:"",i="";if(this.angle!==0){let a=super.getBoundingBox();if(a){let s=a.x+a.width/2,c=a.y+a.height/2;i=`rotate(${this.angle} ${s} ${c})`}else i=`rotate(${this.angle})`}return n=`${o} ${i}`.trim(),n?r.setAttribute("transform",n):r.removeAttribute("transform"),r}};var N=class extends p{constructor(t,r,n,o="black"){super("circle",{cx:t,cy:r,r:n,fill:o})}getBoundingBox(){let t=parseFloat(this.attrs.cx)||0,r=parseFloat(this.attrs.cy)||0,n=parseFloat(this.attrs.r)||0;return{x:t-n,y:r-n,width:n*2,height:n*2}}};var w=class extends p{constructor(t,r,n,o,i={}){super("rect",{x:t,y:r,width:n,height:o,...i})}getBoundingBox(){let t=this.attrs["stroke-width"]||0,r=(parseFloat(this.attrs.x)||0)-t/2,n=(parseFloat(this.attrs.y)||0)-t/2,o=(parseFloat(this.attrs.width)||0)+t,i=(parseFloat(this.attrs.height)||0)+t;return{x:r,y:n,width:o,height:i}}};var T=class extends p{constructor(t,r,n,o={}){super("text",{x:t,y:r,...o,"dominant-baseline":"hanging","font-family":"Roboto Mono","font-size":150}),this.text=n}getBoundingBox(){let t=parseFloat(this.attrs.x)||0,r=parseFloat(this.attrs.y)||0,n=parseFloat(this.attrs["font-size"]||12),o=this.text.length*n*.6;return{x:t,y:r,width:o,height:n}}render(t){return this.textContent=this.text,super.render(t)}};var H=class extends d{constructor(t,r={}){super();let{padding:n=30,borderRadius:o=30,backgroundColor:i="#f1c863",textColor:a="#000000"}=r,s=new T(n,n,t,{fill:a}),c=s.getBoundingBox(),l=new w(0,0,c.width+n*2,c.height+n*2,{fill:i,rx:o,ry:o});this.append(l),this.append(s)}align(t,r,n=0){let o=this.getBoundingBox(),i=r.getBoundingBox(),a=o.width/2,s=o.height/2,c=i.x+i.width/2,l=i.y+i.height/2,f=0,h=0,g=0;switch(t){case"leftof":f=i.x-n-a,h=l;break;case"rightof":f=i.x+i.width+n+a,h=l;break;case"above":f=c,h=i.y-n-o.width/2,g=-90;break;case"under":f=c,h=i.y+i.height+n+o.width/2,g=-90;break;default:throw new Error(`Invalid alignment: ${t}`)}let y=f-a,m=h-s;this.setTranslate(y,m),this.setRotation(g)}};var L=class extends d{constructor(t,r,n={}){super();let{borderRadius:o=30}=n,i=new w(0,0,150,150,{fill:r,rx:o,ry:o});this.append(i);let a=new T(250,0,t,{"font-size":150,fill:"#000000"});this.append(a)}};var M=class extends d{constructor(t,r){super();let n=this.getUsedTypes(r,t),o=this.createLegendItems(n);if(o.length===0)return;let i=p.getCombinedBoundingBox(o),a=this.createBackground(i);this.prepend(a),this.children.push(...o)}getUsedTypes(t,r){let n=new Map;for(let o in t)t[o].forEach(i=>{i&&i.forEach(a=>{let s=a.split(":"),c=s.length>1&&r[s[1]]?s[1]:"default";if(n.has(c))return;let l=r[c];n.set(c,{label:l.label??c,bgcolor:l.bgcolor})})});return n}createLegendItems(t){let r=100,n=[];return Array.from(t.values()).sort((i,a)=>i.label.localeCompare(a.label)).forEach(i=>{let a=new L(i.label,i.bgcolor);a.setTranslate(100,r),n.push(a);let s=a.getBoundingBox();r+=s.height+100}),n}createBackground(t){return new w(t.x-100,t.y-100,t.width+100*2,t.height+100*2,{fill:"#ffffff",stroke:"#cccccc","stroke-width":10,rx:30,ry:30})}};var X=class extends d{constructor(t,r={}){super();let{fontSize:n=150*2}=r,o=new T(0,0,t,{"font-size":n});this.append(o)}};var K=class extends p{constructor(t,r,n,o,i,a={}){super("image",{x:t,y:r,width:n,height:o,href:i,...a})}getBoundingBox(){let t=parseFloat(this.attrs.x)||0,r=parseFloat(this.attrs.y)||0,n=parseFloat(this.attrs.width)||0,o=parseFloat(this.attrs.height)||0;return{x:t,y:r,width:n,height:o}}};var Y=class extends d{constructor(t,r,n={},o={}){super();let{fill:i="#558f0e",padding:a=254/2}=o,s=(t-1)*254+a*2,c=(r-1)*254+a*2,l=-a,f=-a;if(n?.front?.src){let h=this.createImageBackground(l,f,s,c,n.front);this.append(h)}else this.append(this.createRectBackground(l,f,s,c,i));this.setPadding(this.pcbPadding(n))}createImageBackground(t,r,n,o,i){let{src:a,top:s=0,left:c=0,right:l=0,bottom:f=0,opacity:h=.5,grayscale:g=!0}=i,y=t+c,m=r+s,I=n-c-l,Jt=o-s-f,dt={preserveAspectRatio:"none",opacity:h};return g&&(dt.filter="url(#grayscale)"),new K(y,m,I,Jt,a,dt)}createRectBackground(t,r,n,o,i){return new w(t,r,n,o,{fill:i,rx:30,ry:30})}pcbPadding(t){if(!t.front.src&&!t.back.src)return 0;let r=(n,o)=>n>0&&o>0||n<o?0:Math.abs(n-o);return{top:r(t.front.top,t.back.top),left:r(t.front.left,t.back.left),right:r(t.front.right,t.back.right),bottom:r(t.front.bottom,t.back.bottom)}}};var Yt=ie(Kt(),1);var et=class extends d{constructor(){super({id:"root"})}reframe(){let t=this.getBoundingBox();this.setTranslate(0-t.x,0-t.y)}};var rt=class{setup={title:"My PCB",width:5,height:5,image:{front:{src:"",top:0,left:0,right:0,bottom:0,opacity:.5,grayscale:!0},back:{src:"",top:0,left:0,right:0,bottom:0,opacity:.5,grayscale:!0}},types:{default:{label:"Pin",bgcolor:"#ffffff",fgcolor:"#000000"},gpio:{label:"GPIO",bgcolor:"#79bc3c",fgcolor:"#ffffff"},power:{label:"Power",bgcolor:"#cc322d",fgcolor:"#ffffff"},gnd:{label:"Ground",bgcolor:"#333333",fgcolor:"#ffffff"},i2c:{label:"I2C",bgcolor:"#41b28c",fgcolor:"#ffffff"},uart:{label:"UART",bgcolor:"#637181",fgcolor:"#ffffff"},spi:{label:"SPI",bgcolor:"#775ee8",fgcolor:"#ffffff"},analog:{label:"Analog",bgcolor:"#e38022",fgcolor:"#ffffff"}},offsets:{left:0,top:0,right:0,bottom:0},pins:{left:[],right:[],top:[],bottom:[]}};constructor(t){this.setup=(0,Yt.default)(this.setup,t),this.normalizePinArrays(),this.isFlipped=!1}build(){let t=new D,r=new et;t.append(r);let n=new d;n.append(this.createPinRow("left","leftof")),n.append(this.createPinRow("right","rightof")),n.append(this.createPinRow("top","above")),n.append(this.createPinRow("bottom","under")),r.append(n);let o=new Y(this.setup.width,this.setup.height,this.setup.image);n.prepend(o);let i=new X(this.setup.title+(this.isFlipped?"  (back)":" (front)"));r.append(i);let a=new M(this.setup.types,this.setup.pins,this.isFlipped);r.append(a);let s=n.getBoundingBox(),c=a.getBoundingBox(),l=i.getBoundingBox(),f=r.getBoundingBox();return this.isFlipped?a.setTranslate(s.x-c.width+10-100*3,f.y+f.height-c.height):a.setTranslate(s.x+s.width+100*3,f.y+f.height-c.height),f=r.getBoundingBox(),i.setTranslate(f.x,f.y-100-l.height),r.reframe(),t.getBoundingBox(),t}flip(){this.isFlipped=!this.isFlipped;let t=this.setup.pins.left;this.setup.pins.left=this.setup.pins.right,this.setup.pins.right=t;let r=this.setup.offsets.left;if(this.setup.offsets.left=this.setup.offsets.right,this.setup.offsets.right=r,this.setup.pins.top&&this.setup.pins.top.reverse(),this.setup.pins.bottom&&this.setup.pins.bottom.reverse(),this.setup.image){let n=this.setup.image.front;this.setup.image.front=this.setup.image.back,this.setup.image.back=n}}normalizePinArrays(){let{width:t,height:r,pins:n}=this.setup,o=(i,a)=>{let s=n[i];if(!s){n[i]=Array(a).fill([]);return}let c=s.length;if(c<a){let l=a-c;n[i]=s.concat(Array(l).fill([]))}else c>a&&(console.warn(`Builder: Pin array '${i}' has ${c} elements, but expected ${a}. 
                    Truncating excess elements.`),n[i]=s.slice(0,a))};o("left",r),o("right",r),o("top",t),o("bottom",t)}createPinWithLabels(t,r,n){let o=new d,i=this.pinPosition(t,r),a=new N(i.x,i.y,60,"gold");o.append(a);let s=a;return this.setup.pins[t][r].forEach((c,l)=>{let[f,h]=c.split(":"),{bgcolor:g,fgcolor:y}=this.setup.types[h]||this.setup.types.default,m=new H(f,{backgroundColor:g,textColor:y});m.align(n,s,l?100:100*3),o.append(m),s=m}),o}createPinRow(t,r){let n=new d,o=this.setup.pins[t].length;for(let i=0;i<o;i++){if(!this.setup.pins[t][i]||!this.setup.pins[t][i].length)continue;let a=this.createPinWithLabels(t,i,r);n.append(a)}return n}pinPosition(t,r){switch(t){case"left":return{x:this.setup.offsets.left*254,y:r*254};case"right":return{x:(this.setup.width-1-this.setup.offsets.right)*254,y:r*254};case"top":return{x:r*254,y:this.setup.offsets.top*254};case"bottom":return{x:r*254,y:(this.setup.height-1-this.setup.offsets.bottom)*254};default:throw new Error(`Invalid row: ${t}`)}}};import rn from"yaml";import{readdir as nn,readFile as on,stat as Wt,writeFile as Zt}from"fs/promises";import{join as sn,dirname as an}from"path";var tn=typeof process<"u"&&process.versions!=null&&process.versions.node!=null,nt=class e{static SERVICE="https://imgdataurl.splitbrain.workers.dev/";constructor(t=""){this.base=t}async embedImages(t){let r=[];if(t?.image?.front?.src&&r.push({config:t.image.front,originalSrc:t.image.front.src}),t?.image?.back?.src&&r.push({config:t.image.back,originalSrc:t.image.back.src}),r.length===0)return t;let n=r.map(i=>this.embed(i.originalSrc));return(await Promise.allSettled(n)).forEach((i,a)=>{let s=r[a];i.status==="fulfilled"?s.config.src=i.value:console.warn(`Failed to embed image "${s.originalSrc}": ${i.reason?.message||i.reason}. Keeping original source.`)}),t}async embed(t){if(!t)throw new Error("Image source cannot be empty.");return tn?this.embedNode(t):this.embedBrowser(t)}async embedNode(t){let r=await import("fs/promises"),n=await import("path"),o,i;if(t.startsWith("http://")||t.startsWith("https://")){let c=await fetch(t);if(!c.ok)throw new Error(`Failed to fetch image '${t}': ${c.status} ${c.statusText}`);o=Buffer.from(await c.arrayBuffer()),i=c.headers.get("content-type")?.split(";")[0].toLowerCase()}else{t=this.base?n.join(this.base,t):t,o=await r.readFile(t);let c=n.extname(t).toLowerCase();c===".jpg"||c===".jpeg"?i="image/jpeg":c===".png"?i="image/png":i=null}if(i!=="image/jpeg"&&i!=="image/png")throw new Error(`Unsupported image type for source "${t}". Only JPEG and PNG are supported. Detected type: ${i||"unknown"}`);let a=o.toString("base64"),s=`data:${i};base64,${a}`;return console.debug(`Generated data URI for ${t} (length: ${s.length})`),s}async embedBrowser(t){if(!t.match(/^https?:\/\//)&&(this.base&&(t=`${this.base}/${t}`),t=new URL(t,window.location.href).toString(),t.match(/^http:\/\/(localhost|127.0.0.1)/)))return t;let r=`${e.SERVICE}?url=${encodeURIComponent(t)}`,n=await fetch(r);if(!n.ok)throw new Error(`Failed to fetch data URI from service for '${t}': ${n.status} ${n.statusText}`);let o=await n.text();if(typeof o!="string"||!o.startsWith("data:"))throw new Error(`Invalid response from embed service for source "${t}". Expected data URI, got: ${o.substring(0,100)}...`);return console.debug(`Received data URI for ${t} (length: ${o.length})`),o}};function kt(){console.log(`Usage: node ${process.argv[1]} [options] <file/dir> ...`),console.log("Options:"),console.log("  -h, --help    Display this help message."),console.log(`
Generates SVG pinout leaves based on given configuration files in yaml or json format.`)}async function cn(e){let t=0;try{let r=await nn(e);for(let n of r){let o=sn(e,n);try{(await Wt(o)).isFile()&&(n.endsWith(".json")||n.endsWith(".yaml"))&&await Vt(o)}catch(i){console.error(`Failed getting stats for '${o}': ${i.message}`),t++}}}catch(r){console.error(`Failed reading directory '${e}': ${r.message}`),t++}return t}async function Vt(e){let t=await on(e,"utf8"),r;if(e.endsWith(".yaml"))r=rn.parse(t);else if(e.endsWith(".json"))r=JSON.parse(t);else throw new Error(`Unsupported file type: ${e}`);r=await new nt(an(e)).embedImages(r);let o=e.replace(/\.(yaml|json)$/,""),i=new rt(r),a=en(),s=i.build().render(a.document).outerHTML;await Zt(o+".front.svg",s,"utf8"),console.info(o+".front.svg written"),i.flip();let c=i.build().render(a.document).outerHTML;await Zt(o+".back.svg",c,"utf8"),console.info(o+".back.svg written")}async function fn(){let e=process.argv.slice(2);(e.includes("-h")||e.includes("--help"))&&(kt(),process.exit(0)),e.length===0&&(console.warn(`No input files or directories specified.
`),kt(),process.exit(0));let t=0;for(let r of e)try{let n=await Wt(r);n.isFile()?await Vt(r):n.isDirectory()?t+=await cn(r):(console.error(`Error: '${r}' is not a file or directory.`),t++)}catch(n){n.code==="ENOENT"?console.error(`Error: Path not found '${r}'`):(console.error(`Error processing '${r}': ${n.message}`),console.debug(n.stack)),t++}process.exit(t)}fn();
//# sourceMappingURL=cli.js.map
