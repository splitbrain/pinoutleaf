{
  "version": 3,
  "sources": ["../../node_modules/lodash.merge/index.js", "../../src/cli.js", "../../src/elements/BaseElement.js", "../../src/elements/Defs.js", "../../src/elements/SvgRoot.js", "../../src/elements/Group.js", "../../src/elements/Circle.js", "../../src/elements/Rect.js", "../../src/elements/Text.js", "../../src/components/PinLabel.js", "../../src/components/LegendItem.js", "../../src/components/Legend.js", "../../src/components/Title.js", "../../src/elements/Image.js", "../../src/components/Pcb.js", "../../src/Builder.js", "../../src/components/RootGroup.js", "../../src/ImageEmbed.js"],
  "sourcesContent": ["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n", "import {createWindow} from \"svgdom\";\nimport {Builder} from \"./Builder.js\";\nimport Yaml from 'yaml';\nimport { readdir, readFile, stat, writeFile } from 'fs/promises';\nimport {join, dirname} from 'path';\nimport {ImageEmbed} from \"./ImageEmbed.js\";\n\n/**\n * Prints the command-line help message to the console.\n */\nfunction printHelp() {\n    console.log(`Usage: node ${process.argv[1]} [options] <file/dir> ...`);\n    console.log(\"Options:\");\n    console.log(\"  -h, --help    Display this help message.\");\n    console.log(\"\\nGenerates SVG pinout leaves based on given configuration files in yaml or json format.\");\n}\n\n/**\n * Processes a directory, finding and processing all `.yaml` and `.json` files within it.\n * Logs errors encountered during directory reading or file processing.\n *\n * @param {string} dir - The path to the directory to process.\n * @returns {Promise<number>} A promise that resolves with the number of errors encountered.\n */\nasync function processDir(dir) {\n    let errors = 0;\n    try {\n        const files = await readdir(dir);\n        for (const file of files) {\n            const filePath = join(dir, file);\n            try {\n                const stats = await stat(filePath);\n                if (stats.isFile() && (file.endsWith('.json') || file.endsWith('.yaml'))) {\n                    await processFile(filePath);\n                }\n            } catch (statError) {\n                console.error(`Failed getting stats for '${filePath}': ${statError.message}`);\n                errors++;\n            }\n        }\n    } catch (readDirError) {\n        console.error(`Failed reading directory '${dir}': ${readDirError.message}`);\n        errors++;\n    }\n    return errors;\n}\n\n/**\n * Processes a single configuration file (.yaml or .json).\n * Reads the file, parses the content, embeds any specified images,\n * generates front and back SVG diagrams, and writes them to disk.\n *\n * @param {string} file - The path to the configuration file.\n * @returns {Promise<void>} A promise that resolves when processing is complete.\n * @throws {Error} If the file type is unsupported, parsing fails, or writing fails.\n */\nasync function processFile(file) {\n    const data = await readFile(file, 'utf8');\n\n    let setup;\n    if (file.endsWith('.yaml')) {\n        setup = Yaml.parse(data);\n    } else if (file.endsWith('.json')) {\n        setup = JSON.parse(data);\n    } else {\n        throw new Error(`Unsupported file type: ${file}`);\n    }\n\n    const embed = new ImageEmbed(dirname(file));\n    setup = await embed.embedImages(setup);\n\n    const outputBase = file.replace(/\\.(yaml|json)$/, '');\n    const builder = new Builder(setup);\n    const window = createWindow();\n\n    const frontSvgContent = builder.build().render(window.document).outerHTML;\n    await writeFile(outputBase + '.front.svg', frontSvgContent, 'utf8');\n    console.info(outputBase + '.front.svg written');\n\n    builder.flip();\n    const backSvgContent = builder.build().render(window.document).outerHTML;\n    await writeFile(outputBase + '.back.svg', backSvgContent, 'utf8');\n    console.info(outputBase + '.back.svg written');\n}\n\n/**\n * Main entry point for the CLI application.\n * Parses command-line arguments, handles help requests, and orchestrates\n * the processing of specified files and directories.\n * Exits with a status code indicating the number of errors encountered.\n *\n * @returns {Promise<void>}\n */\nasync function main() {\n    const args = process.argv.slice(2);\n\n    if (args.includes('-h') || args.includes('--help')) {\n        printHelp();\n        process.exit(0);\n    }\n\n    if (args.length === 0) {\n        console.warn(\"No input files or directories specified.\\n\");\n        printHelp();\n        process.exit(0);\n    }\n\n    let errors = 0;\n\n    for (const arg of args) {\n        try {\n            const stats = await stat(arg);\n            if (stats.isFile()) {\n                await processFile(arg);\n            } else if (stats.isDirectory()) {\n                errors += await processDir(arg);\n            } else {\n                console.error(`Error: '${arg}' is not a file or directory.`);\n                errors++;\n            }\n        } catch (error) {\n            if (error.code === 'ENOENT') {\n                console.error(`Error: Path not found '${arg}'`);\n            } else {\n                console.error(`Error processing '${arg}': ${error.message}`);\n                console.debug(error.stack);\n            }\n            errors++;\n        }\n    }\n\n    process.exit(errors);\n}\n\nmain();\n", "export class BaseElement {\n    constructor(name, attrs = {}, children = []) {\n        this.name = name;\n        this.attrs = { ...attrs };\n        this.children = [...children];\n        this.textContent = null;\n    }\n\n    append(child) {\n        this.children.push(child);\n        return this;\n    }\n\n    prepend(child) {\n        this.children.unshift(child);\n        return this;\n    }\n\n    setAttr(name, value) {\n        this.attrs[name] = value;\n        return this;\n    }\n\n    /**\n     * Calculates the combined bounding box of an array of elements.\n     * @param {BaseElement[]} elements - An array of elements.\n     * @returns {object|null} The combined bounding box { x, y, width, height } or null if no elements have bounds.\n     */\n    static getCombinedBoundingBox(elements) {\n        if (!elements || elements.length === 0) {\n            return null;\n        }\n\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n        let hasValidBounds = false;\n\n        for (const element of elements) {\n            // Ensure element has the method and call it\n            if (typeof element?.getBoundingBox === 'function') {\n                const bbox = element.getBoundingBox();\n                if (bbox) {\n                    minX = Math.min(minX, bbox.x);\n                    minY = Math.min(minY, bbox.y);\n                    maxX = Math.max(maxX, bbox.x + bbox.width);\n                    maxY = Math.max(maxY, bbox.y + bbox.height);\n                    hasValidBounds = true;\n                }\n            }\n        }\n\n        if (!hasValidBounds) {\n            return null;\n        }\n\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY\n        };\n    }\n\n\n    getBoundingBox() {\n        if (this.children.length === 0) {\n            return null;\n        }\n\n        // If we have children, compute the bounding box from them\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n        let hasValidBounds = false;\n\n        for (const child of this.children) {\n            const bbox = child.getBoundingBox();\n            if (bbox) {\n                minX = Math.min(minX, bbox.x);\n                minY = Math.min(minY, bbox.y);\n                maxX = Math.max(maxX, bbox.x + bbox.width);\n                maxY = Math.max(maxY, bbox.y + bbox.height);\n                hasValidBounds = true;\n            }\n        }\n\n        if (!hasValidBounds) {\n            return null;\n        }\n\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY\n        };\n    }\n\n    render(document) {\n        const el = document.createElementNS('http://www.w3.org/2000/svg', this.name);\n\n        for (const [key, val] of Object.entries(this.attrs)) {\n            if (typeof key === 'string' && val != null) {\n                el.setAttribute(String(key), String(val));\n            }\n        }\n\n        for (const child of this.children) {\n            el.appendChild(child.render(document));\n        }\n\n        // Set text content if it exists\n        if (this.textContent !== null) {\n            el.textContent = this.textContent;\n        }\n\n        return el;\n    }\n}\n", "import {BaseElement} from './BaseElement.js';\nimport fontData from '@fontsource/roboto-mono/files/roboto-mono-latin-500-normal.woff2';\n\nexport class Defs extends BaseElement {\n  constructor(children = []) {\n    super('defs', {}, children);\n\n\n    const style = new BaseElement('style', { type: 'text/css' });\n    // Embed the Open-Sans font\n    style.textContent = `\n      @font-face {\n        font-family: 'Roboto Mono';\n        src: url('${fontData}') format('woff2');\n      }\n    `;\n    this.append(style);\n\n    const filter = new BaseElement('filter', { id: 'grayscale' });\n    filter.append(new BaseElement('feColorMatrix', {\n      type: 'saturate',\n      values: '0'\n    }));\n    this.append(filter);\n  }\n\n  render(document) {\n    const el = super.render(document);\n\n    // Handle any elements with textContent property\n    for (const child of this.children) {\n      if (child.textContent) {\n        const childEl = el.childNodes[this.children.indexOf(child)];\n        childEl.textContent = child.textContent;\n      }\n    }\n\n    return el;\n  }\n}\n", "import { BaseElement } from './BaseElement.js';\nimport { Defs } from './Defs.js';\n\nexport class SvgRoot extends BaseElement {\n    constructor() {\n        super('svg', {\n            xmlns: 'http://www.w3.org/2000/svg',\n        });\n        \n        // Create defs element for definitions\n        this.defs = new Defs();\n        this.append(this.defs);\n    }\n\n    getBoundingBox() {\n        const bbox = super.getBoundingBox();\n        if (!bbox) {\n            return { x: 0, y: 0, width: 0, height: 0 };\n        }\n\n        // Update SVG viewBox based on the bounding box\n        this.setAttr('viewBox', `${bbox.x} ${bbox.y} ${bbox.width} ${bbox.height}`);\n        this.setAttr('width', bbox.width/100 + 'mm');\n        this.setAttr('height', bbox.height/100 + 'mm');\n\n        return bbox;\n    }\n}\n", "import { BaseElement } from './BaseElement.js';\n\nexport class Group extends BaseElement {\n    constructor(attrs = {}, children = []) {\n        super('g', attrs, children);\n        this.tx = 0;\n        this.ty = 0;\n        this.angle = 0; // Rotation angle in degrees (0, 90, 180, 270)\n    }\n\n    /**\n     * Sets the absolute translation for the group.\n     * @param {number} tx - Translation along the x-axis.\n     * @param {number} ty - Translation along the y-axis.\n     */\n    setTranslate(tx, ty) {\n        this.tx = tx;\n        this.ty = ty;\n        // No need to update attrs.transform directly anymore\n        delete this.attrs.transform; // Remove old attribute if present\n        return this;\n    }\n\n    /**\n     * Sets the absolute rotation for the group.\n     * Rotation is performed around the center of the group's untransformed bounding box.\n     * @param {number} angle - Rotation angle in degrees. Must be a multiple of 90.\n     */\n    setRotation(angle) {\n        if (angle % 90 !== 0) {\n            console.warn(`Group rotation angle must be a multiple of 90. Received ${angle}. Clamping to nearest 90.`);\n            angle = Math.round(angle / 90) * 90;\n        }\n        // Normalize angle to be within [0, 360)\n        this.angle = ((angle % 360) + 360) % 360;\n        // No need to update attrs.transform directly anymore\n        delete this.attrs.transform; // Remove old attribute if present\n        return this;\n    }\n\n\n    getBoundingBox() {\n        // Get the base bounding box from children (untransformed)\n        const bbox = super.getBoundingBox();\n        if (!bbox) {\n            return null; // No children, no bounding box\n        }\n\n        // If no transformation, return the base bbox directly\n        if (this.angle === 0 && this.tx === 0 && this.ty === 0) {\n            return bbox;\n        }\n\n        // Calculate the center of the untransformed bounding box\n        const cx = bbox.x + bbox.width / 2;\n        const cy = bbox.y + bbox.height / 2;\n\n        // Calculate corners of the untransformed bbox\n        const corners = [\n            { x: bbox.x, y: bbox.y },                     // Top-left\n            { x: bbox.x + bbox.width, y: bbox.y },         // Top-right\n            { x: bbox.x + bbox.width, y: bbox.y + bbox.height }, // Bottom-right\n            { x: bbox.x, y: bbox.y + bbox.height }         // Bottom-left\n        ];\n\n        // Apply rotation (around center cx, cy) and translation (tx, ty) to corners\n        const transformedCorners = corners.map(p => {\n            // Translate point relative to rotation center\n            let relX = p.x - cx;\n            let relY = p.y - cy;\n\n            // Rotate point (simplified for 90-degree increments)\n            let rotatedX, rotatedY;\n            switch (this.angle) {\n                case 90:\n                    rotatedX = -relY;\n                    rotatedY = relX;\n                    break;\n                case 180:\n                    rotatedX = -relX;\n                    rotatedY = -relY;\n                    break;\n                case 270:\n                    rotatedX = relY;\n                    rotatedY = -relX;\n                    break;\n                default: // 0 degrees\n                    rotatedX = relX;\n                    rotatedY = relY;\n                    break;\n            }\n\n            // Translate point back from rotation center and apply group translation\n            return {\n                x: rotatedX + cx + this.tx,\n                y: rotatedY + cy + this.ty\n            };\n        });\n\n        // Find min/max of transformed corners\n        let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n        transformedCorners.forEach(p => {\n            minX = Math.min(minX, p.x);\n            minY = Math.min(minY, p.y);\n            maxX = Math.max(maxX, p.x);\n            maxY = Math.max(maxY, p.y);\n        });\n\n        // Return new bounding box encompassing the transformed corners\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY\n        };\n    }\n\n    render(document) {\n        // Render the base group element\n        const el = super.render(document); // This renders children too\n\n        // Calculate transform string if needed\n        let transformValue = '';\n        const translatePart = (this.tx !== 0 || this.ty !== 0) ? `translate(${this.tx} ${this.ty})` : '';\n\n        let rotatePart = '';\n        if (this.angle !== 0) {\n            // Rotation requires the center of the untransformed bbox\n            const bbox = super.getBoundingBox(); // Get untransformed bbox again\n            if (bbox) {\n                const cx = bbox.x + bbox.width / 2;\n                const cy = bbox.y + bbox.height / 2;\n                rotatePart = `rotate(${this.angle} ${cx} ${cy})`;\n            } else {\n                // Cannot rotate if there's no bounding box (e.g., empty group)\n                rotatePart = `rotate(${this.angle})`; // Rotate around origin (0,0) as fallback\n            }\n        }\n\n        // Combine parts (translate first, then rotate - applied right-to-left)\n        transformValue = `${translatePart} ${rotatePart}`.trim();\n\n        // Set the transform attribute only if there is a transformation\n        if (transformValue) {\n            el.setAttribute('transform', transformValue);\n        } else {\n            el.removeAttribute('transform'); // Ensure no transform if tx=ty=angle=0\n        }\n\n        return el;\n    }\n}\n", "import { BaseElement } from './BaseElement.js';\n\nexport class Circle extends BaseElement {\n  constructor(cx, cy, r, fill = 'black') {\n    super('circle', { cx, cy, r, fill });\n  }\n\n  getBoundingBox() {\n    const cx = parseFloat(this.attrs.cx) || 0;\n    const cy = parseFloat(this.attrs.cy) || 0;\n    const r = parseFloat(this.attrs.r) || 0;\n    \n    return {\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    };\n  }\n}\n", "import {BaseElement} from './BaseElement.js';\n\nexport class Rect extends BaseElement {\n    constructor(x, y, width, height, attrs = {}) {\n        super('rect', {\n            x,\n            y,\n            width,\n            height,\n            ...attrs\n        });\n    }\n\n    getBoundingBox() {\n        // strokes are centered on the path, so we need to adjust the bounding box\n        const strokeWidth = this.attrs['stroke-width'] || 0;\n        const x = (parseFloat(this.attrs.x) || 0) - strokeWidth;\n        const y = (parseFloat(this.attrs.y) || 0) - strokeWidth;\n        const width = (parseFloat(this.attrs.width) || 0) + strokeWidth * 2;\n        const height = (parseFloat(this.attrs.height) || 0) + strokeWidth * 2;\n\n        return {\n            x,\n            y,\n            width,\n            height\n        };\n    }\n}\n", "import { BaseElement } from './BaseElement.js';\nimport {FONTSIZE} from \"../Constants.js\";\n\nexport class Text extends BaseElement {\n  constructor(x, y, text, attrs = {}) {\n    super('text', {\n      x,\n      y,\n      ...attrs,\n      // align on top left corner\n      'dominant-baseline': 'hanging',\n      'font-family': 'Roboto Mono',\n      'font-size': FONTSIZE,\n    });\n    this.text = text;\n  }\n\n  getBoundingBox() {\n    // Text bounding box is approximate since we don't have access to font metrics\n    // A more accurate implementation would require measuring the text in the browser\n    const x = parseFloat(this.attrs.x) || 0;\n    const y = parseFloat(this.attrs.y) || 0;\n\n    // Estimate width based on text length and font size\n    const fontSize = parseFloat(this.attrs['font-size'] || 12);\n    const estimatedWidth = this.text.length * fontSize * 0.6; // rough approximation\n\n    return {\n      x: x,\n      y: y,\n      width: estimatedWidth,\n      height: fontSize\n    };\n  }\n\n  render(document) {\n    // Set the text content before rendering\n    this.textContent = this.text;\n    return super.render(document);\n  }\n}\n", "// src/components/PinLabel.js\nimport {Group} from '../elements/Group.js';\nimport {Rect} from '../elements/Rect.js';\nimport {Text} from '../elements/Text.js';\nimport {CORNERS} from \"../Constants.js\";\n\nexport class PinLabel extends Group {\n\n\n    constructor(text, options = {}) {\n        super(); // Create a group to contain our elements\n\n        // Default options\n        const {\n            padding = CORNERS,\n            borderRadius = CORNERS,\n            backgroundColor = '#f1c863',\n            textColor = '#000000',\n        } = options;\n\n        // Create text element\n        const textElement = new Text(padding, padding, text, {\n            'fill': textColor,\n        });\n\n        // Get approximate text dimensions\n        const textBBox = textElement.getBoundingBox();\n\n\n        // Create background rectangle with padding\n        const rect = new Rect(\n            0,\n            0,\n            textBBox.width + (padding * 2),\n            textBBox.height + (padding * 2),\n            {\n                'fill': backgroundColor,\n                'rx': borderRadius,\n                'ry': borderRadius\n            }\n        );\n\n        // Add elements to the group (background first, then text)\n        this.append(rect);\n        this.append(textElement);\n    }\n\n\n    /**\n     * Align the label with respect to another element.\n     *\n     * @param {string} alignment The alignment to use. Can be 'leftof', 'rightof', 'above', or 'under'.\n     * @param {BaseElement} reference The reference element to align to.\n     * @param {number} [padding=0] Optional padding to add to the alignment.\n     */\n    align(alignment, reference, padding = 0) {\n        // Get the bounding box of the group\n        // Get bounding boxes\n        const myBBox = this.getBoundingBox();\n        const refBBox = reference.getBoundingBox();\n\n        // Calculate centers\n        const labelCx = myBBox.width / 2;\n        const labelCy = myBBox.height / 2;\n        const refCx = refBBox.x + refBBox.width / 2;\n        const refCy = refBBox.y + refBBox.height / 2;\n\n        // Determine target center and rotation based on alignment\n        let targetCx = 0;\n        let targetCy = 0;\n        let rotationAngle = 0;\n\n        switch (alignment) {\n            case 'leftof':\n                // Target center is left of reference bbox, vertically aligned with reference center\n                targetCx = refBBox.x - padding - labelCx; // target x for label center\n                targetCy = refCy;                       // target y for label center\n                break;\n            case 'rightof':\n                // Target center is right of reference bbox, vertically aligned with reference center\n                targetCx = refBBox.x + refBBox.width + padding + labelCx; // target x for label center\n                targetCy = refCy;                                        // target y for label center\n                break;\n            case 'above':\n                // Target center is above reference bbox, horizontally aligned with reference center\n                // Note: Rotated label's effective height is myBBox.width\n                targetCx = refCx;\n                targetCy = refBBox.y - padding - (myBBox.width / 2); // Use width for vertical offset due to rotation\n                rotationAngle = -90;\n                break;\n            case 'under':\n                // Target center is under reference bbox, horizontally aligned with reference center\n                // Note: Rotated label's effective height is myBBox.width\n                targetCx = refCx;\n                targetCy = refBBox.y + refBBox.height + padding + (myBBox.width / 2); // Use width for vertical offset\n                rotationAngle = -90;\n                break;\n            default:\n                throw new Error(`Invalid alignment: ${alignment}`);\n        }\n\n        // Calculate translation needed to move label's origin (0,0)\n        // so that its center (labelCx, labelCy) ends up at (targetCx, targetCy)\n        // after rotation (if any) around (labelCx, labelCy).\n        const translateX = targetCx - labelCx;\n        const translateY = targetCy - labelCy;\n\n        // Apply the calculated translation and rotation using the new methods\n        this.setTranslate(translateX, translateY);\n        this.setRotation(rotationAngle); // Handles 0 angle correctly\n    }\n\n}\n", "import {Group} from '../elements/Group.js';\nimport {Rect} from '../elements/Rect.js';\nimport {Text} from '../elements/Text.js';\nimport {CORNERS, FONTSIZE, PADDING} from \"../Constants.js\";\n\nexport class LegendItem extends Group {\n    /**\n     * Creates a LegendItem with a colored swatch and a label.\n     *\n     *\n     * @param {string} labelText - The text to display next to the color swatch.\n     * @param {string} backgroundColor - The background color of the swatch.\n     * @param {object} [options={}] - Optional configuration.\n     */\n    constructor(labelText, backgroundColor, options = {}) {\n        super(); // Initialize the group\n\n\n        // Default options\n        const {\n            borderRadius = CORNERS,\n        } = options;\n\n\n        // Color Swatch\n        const swatch = new Rect(\n            0,\n            0,\n            FONTSIZE,\n            FONTSIZE,\n            {\n                'fill': backgroundColor,\n                'rx': borderRadius,\n                'ry': borderRadius\n            }\n        );\n        this.append(swatch);\n\n        // Type Label\n        const label = new Text(\n            FONTSIZE + PADDING,\n            0,\n            labelText,\n            {\n                'font-size': FONTSIZE,\n                'fill': '#000000',\n            }\n        );\n        this.append(label);\n    }\n}\n", "// src/components/Legend.js\nimport {Group} from '../elements/Group.js';\nimport {Rect} from '../elements/Rect.js';\nimport {LegendItem} from './LegendItem.js';\nimport {CORNERS, PADDING} from \"../Constants.js\";\nimport {BaseElement} from '../elements/BaseElement.js'; // Needed for static method access\n\n\nexport class Legend extends Group {\n    /**\n     * Creates a legend component.\n     * @param {object} allTypes - The full map of type names to {bgcolor, fgcolor} from setup.types.\n     * @param {object} pinsData - The pin definitions from setup.pins (e.g., setup.pins.left).\n     */\n    constructor(allTypes, pinsData) {\n        super();\n\n        const usedTypes = this.getUsedTypes(pinsData, allTypes);\n        const items = this.createLegendItems(usedTypes);\n\n        if (items.length === 0) {\n            return; // No legend needed if no types are used\n        }\n\n        const itemsBBox = BaseElement.getCombinedBoundingBox(items);\n        const background = this.createBackground(itemsBBox);\n\n        if (background) {\n            this.prepend(background);\n        }\n        this.children.push(...items); // Append all items at once\n    }\n\n    /**\n     * Determines the unique types used and retrieves their label and background color.\n     *\n     * @returns {Map<string, {label: string, bgcolor: string}>}\n     */\n    getUsedTypes(pinsData, allTypes) {\n        const usedTypeInfo = new Map();\n\n        for (const rowKey in pinsData) {\n            pinsData[rowKey].forEach(pinLabels => {\n                if (!pinLabels) return; // pin is null\n                pinLabels.forEach(labelData => {\n                    const parts = labelData.split(':');\n                    const typeName = (parts.length > 1 && allTypes[parts[1]]) ? parts[1] : 'default';\n                    if (usedTypeInfo.has(typeName)) return;\n\n                    const typeDefinition = allTypes[typeName];\n                    usedTypeInfo.set(typeName, {\n                        label: typeDefinition.label ?? typeName,\n                        bgcolor: typeDefinition.bgcolor\n                    });\n                });\n            });\n        }\n        return usedTypeInfo;\n    }\n\n    /**\n     * Creates and positions LegendItem instances for each used type.\n     * @param {Map<string, {label: string, bgcolor: string}>} usedTypeInfo - Map from getUsedTypes.\n     * @returns {LegendItem[]} An array of positioned LegendItem elements.\n     */\n    createLegendItems(usedTypeInfo) {\n        let currentY = PADDING;\n        const items = [];\n\n        // Sort items by label for consistent legend order\n        const sortedItemsData = Array.from(usedTypeInfo.values()).sort((a, b) =>\n            a.label.localeCompare(b.label)\n        );\n\n        sortedItemsData.forEach(itemData => {\n            const legendItem = new LegendItem(itemData.label, itemData.bgcolor);\n            legendItem.setTranslate(PADDING, currentY); // Position item\n            items.push(legendItem);\n\n            const itemBBox = legendItem.getBoundingBox();\n            currentY += itemBBox.height + PADDING;\n        });\n        return items;\n    }\n\n    /**\n     * Creates a background rectangle based on the bounding box of legend items.\n     * @param {object|null} itemsBBox - The bounding box { x, y, width, height } of the items.\n     * @returns {Rect|null} The background Rect element or null.\n     */\n    createBackground(itemsBBox) {\n        if (!itemsBBox) {\n            return null;\n        }\n\n        return new Rect(\n            itemsBBox.x - PADDING,\n            itemsBBox.y - PADDING,\n            itemsBBox.width + PADDING * 2,\n            itemsBBox.height + PADDING * 2,\n            {fill: '#ffffff', stroke: '#cccccc', 'stroke-width': 10, rx: CORNERS, ry: CORNERS}\n        );\n    }\n}\n", "import { Group } from '../elements/Group.js';\nimport { Text } from '../elements/Text.js';\nimport {FONTSIZE, PADDING} from '../Constants.js';\n\n/**\n * Represents the title text for the diagram.\n */\nexport class Title extends Group {\n    /**\n     * Creates a Title component.\n     * @param {string} titleText - The text to display as the title.\n     * @param {object} [options={}] - Optional configuration.\n     */\n    constructor(titleText, options = {}) {\n        super();\n\n        const {\n            fontSize = FONTSIZE * 2, // Larger font size for title\n        } = options;\n\n        const titleElement = new Text(0, 0, titleText, {\n            'font-size': fontSize,\n        });\n\n        this.append(titleElement);\n    }\n}\n", "import { BaseElement } from './BaseElement.js';\n\n/**\n * Represents an SVG <image> element.\n */\nexport class Image extends BaseElement {\n    /**\n     * Creates an Image element.\n     * @param {number} x - The x-coordinate of the top-left corner.\n     * @param {number} y - The y-coordinate of the top-left corner.\n     * @param {number} width - The width of the image.\n     * @param {number} height - The height of the image.\n     * @param {string} href - The URL of the image file.\n     * @param {object} [attrs={}] - Additional attributes for the image element.\n     */\n    constructor(x, y, width, height, href, attrs = {}) {\n        super('image', {\n            x,\n            y,\n            width,\n            height,\n            href, // Standard SVG 2 attribute\n            ...attrs\n        });\n    }\n\n    /**\n     * Calculates the bounding box for the image element.\n     * @returns {{x: number, y: number, width: number, height: number}} The bounding box.\n     */\n    getBoundingBox() {\n        const x = parseFloat(this.attrs.x) || 0;\n        const y = parseFloat(this.attrs.y) || 0;\n        const width = parseFloat(this.attrs.width) || 0;\n        const height = parseFloat(this.attrs.height) || 0;\n\n        return {\n            x,\n            y,\n            width,\n            height\n        };\n    }\n}\n", "import {Group} from '../elements/Group.js';\nimport {Rect} from '../elements/Rect.js';\nimport {Image} from '../elements/Image.js'; // Import the new Image element\nimport {CORNERS, PINSPACE} from '../Constants.js';\n\n/**\n * Represents the PCB background.\n */\nexport class Pcb extends Group {\n\n    /**\n     * Creates a Pcb component.\n     * @param {number} widthInPins - The width of the board in number of pins.\n     * @param {number} heightInPins - The height of the board in number of pins.\n     * @param {object} image\n     * @param {object} [options={}] - Optional configuration.\n     * @param {string} [options.fill='#f0f0f0'] - Background color of the PCB.\n     * @param {number} [options.padding=PADDING * 2] - Padding around the pin area.\n     */\n    constructor(widthInPins, heightInPins, image = {}, options = {}) {\n        super();\n\n        const {\n            fill = '#558f0e', // Default PCB-like color\n            padding = PINSPACE / 2, // Padding around the pin area\n        } = options;\n\n        // Calculate the dimensions based on pin layout\n        const pcbWidth = (widthInPins - 1) * PINSPACE + padding * 2;\n        const pcbHeight = (heightInPins - 1) * PINSPACE + padding * 2;\n\n        // Calculate position to center the pin area within the padding\n        const pcbX = -padding;\n        const pcbY = -padding;\n\n        if (image?.front?.src) {\n            const imgElement = this.createImageBackground(pcbX, pcbY, pcbWidth, pcbHeight, image.front);\n            this.append(imgElement);\n        } else {\n            this.append(this.createRectBackground(pcbX, pcbY, pcbWidth, pcbHeight, fill));\n        }\n    }\n\n    /**\n     * Creates the background image element with adjustments.\n     * @private\n     * @param {number} basePcbX - Base X position.\n     * @param {number} basePcbY - Base Y position.\n     * @param {number} basePcbWidth - Base width.\n     * @param {number} basePcbHeight - Base height.\n     * @param {object} imageConfig - The image configuration object (e.g., setup.image.front).\n     * @returns {Image} The configured Image element.\n     */\n    createImageBackground(basePcbX, basePcbY, basePcbWidth, basePcbHeight, imageConfig) {\n        const {\n            src,\n            top = 0,\n            left = 0,\n            right = 0,\n            bottom = 0,\n            opacity = 0.5, // Default opacity if not specified\n            preserveAspectRatio = 'xMidYMid slice' // Default aspect ratio\n        } = imageConfig;\n\n        // Adjust dimensions based on top, left, right, bottom offsets\n        const imgX = basePcbX + left;\n        const imgY = basePcbY + top;\n        const imgWidth = basePcbWidth - left - right;\n        const imgHeight = basePcbHeight - top - bottom;\n\n        return new Image(imgX, imgY, imgWidth, imgHeight, src, {\n            preserveAspectRatio: 'none',\n            'opacity': opacity,\n            filter: 'url(#grayscale)',\n        });\n    }\n\n    /**\n     * Creates the background rectangle element.\n     * @private\n     * @param {number} pcbX - X position.\n     * @param {number} pcbY - Y position.\n     * @param {number} pcbWidth - Width.\n     * @param {number} pcbHeight - Height.\n     * @param {string} fill - Fill color.\n     * @returns {Rect} The configured Rect element.\n     */\n    createRectBackground(pcbX, pcbY, pcbWidth, pcbHeight, fill) {\n        return new Rect(pcbX, pcbY, pcbWidth, pcbHeight, {\n            fill: fill,\n            rx: CORNERS,\n            ry: CORNERS,\n        });\n    }\n}\n", "import {SvgRoot} from \"./elements/SvgRoot.js\";\nimport {Group} from \"./elements/Group.js\";\nimport {Circle} from \"./elements/Circle.js\";\nimport {PADDING, PINSIZE, PINSPACE} from \"./Constants.js\";\nimport {PinLabel} from \"./components/PinLabel.js\";\nimport {Legend} from \"./components/Legend.js\";\nimport {Title} from \"./components/Title.js\";\nimport {Pcb} from \"./components/Pcb.js\";\nimport merge from 'lodash.merge';\nimport {RootGroup} from \"./components/RootGroup.js\";\n\nexport class Builder {\n\n    setup = {\n        // Diagram Title\n        title: \"My PCB\",\n\n        // size in pins\n        width: 5,\n        height: 5,\n\n        image: {\n            front: {\n                src: '',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n            },\n            back: {\n                src: '',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n            }\n        },\n\n        // types\n        types: {\n            default: {\n                label: 'Pin',\n                bgcolor: '#ffffff',\n                fgcolor: '#000000',\n            },\n            gpio: {\n                label: 'GPIO',\n                bgcolor: '#79bc3c',\n                fgcolor: '#ffffff',\n            },\n            power: {\n                label: 'Power',\n                bgcolor: '#cc322d',\n                fgcolor: '#ffffff',\n            },\n            gnd: {\n                label: 'Ground',\n                bgcolor: '#333333',\n                fgcolor: '#ffffff',\n            },\n            i2c: {\n                label: 'I2C',\n                bgcolor: '#41b28c',\n                fgcolor: '#ffffff',\n            },\n            uart: {\n                label: 'UART',\n                bgcolor: '#637181',\n                fgcolor: '#ffffff',\n            },\n            spi: {\n                label: 'SPI',\n                bgcolor: '#775ee8',\n                fgcolor: '#ffffff',\n            },\n            analog: {\n                label: 'Analog',\n                bgcolor: '#e38022',\n                fgcolor: '#ffffff',\n            },\n        },\n\n        // offsets move their respective rows inwards\n        offsets: {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n        },\n\n        // pin label:type, each pin can have multiple labels\n        pins: {\n            left: [],\n            right: [],\n            top: [],\n            bottom: [],\n        }\n    }\n\n    /**\n     * @param {object} setup The configuration for the PCB diagram.\n     */\n    constructor(setup) {\n        this.setup = merge(this.setup, setup);\n        this.normalizePinArrays();\n    }\n\n    /**\n     * Create the whole diagram\n     *\n     * @returns {SvgRoot}\n     */\n    build() {\n        // Create SVG root\n        const svg = new SvgRoot();\n        const root = new RootGroup();\n        svg.append(root);\n\n\n        // Create pin rows\n        const pinLayoutGroup = new Group();\n        pinLayoutGroup.append(this.createPinRow('left', 'leftof'));\n        pinLayoutGroup.append(this.createPinRow('right', 'rightof'));\n        pinLayoutGroup.append(this.createPinRow('top', 'above'));\n        pinLayoutGroup.append(this.createPinRow('bottom', 'under'));\n        root.append(pinLayoutGroup);\n\n        // Add the PCB background\n        const pcb = new Pcb(this.setup.width, this.setup.height, this.setup.image);\n        pinLayoutGroup.prepend(pcb);\n\n        // Create the title\n        const title = new Title(this.setup.title);\n        root.append(title)\n\n        // Create the legend\n        const legend = new Legend(this.setup.types, this.setup.pins);\n        root.append(legend);\n\n\n        // Get bounding box of the main pin layout\n        const pinLayoutBBox = pinLayoutGroup.getBoundingBox();\n        const legendBBox = legend.getBoundingBox();\n        const titleBBox = title.getBoundingBox();\n\n        // Position title above the pin layout, left aligned\n        title.setTranslate(pinLayoutBBox.x, pinLayoutBBox.y - PADDING - titleBBox.height);\n\n        // Position legend to the right of the pin layout with padding\n        legend.setTranslate(pinLayoutBBox.x + pinLayoutBBox.width + PADDING * 3, pinLayoutBBox.y);\n\n        // Update SVG bounds to include everything\n        root.reframe();\n        svg.getBoundingBox();\n        return svg;\n    }\n\n    /**\n     * Flip the PCB\n     *\n     * This directly modifies the setup object to flip the PCB. It flips the right and left pins,\n     * reverses the order of the top and bottom pins and swaps the front and back images.\n     */\n    flip() {\n        // Swap left and right pins\n        const tempLeftPins = this.setup.pins.left;\n        this.setup.pins.left = this.setup.pins.right;\n        this.setup.pins.right = tempLeftPins;\n\n        // Swap left and right offsets\n        const tempLeftOffset = this.setup.offsets.left;\n        this.setup.offsets.left = this.setup.offsets.right;\n        this.setup.offsets.right = tempLeftOffset;\n\n        // Reverse top and bottom pins\n        if (this.setup.pins.top) {\n            this.setup.pins.top.reverse();\n        }\n        if (this.setup.pins.bottom) {\n            this.setup.pins.bottom.reverse();\n        }\n\n        // Swap front and back images\n        if (this.setup.image) {\n            const tempFrontImage = this.setup.image.front;\n            this.setup.image.front = this.setup.image.back;\n            this.setup.image.back = tempFrontImage;\n        }\n    }\n\n    /**\n     * Ensures pin arrays match the defined width and height.\n     */\n    normalizePinArrays() {\n        const {width, height, pins} = this.setup;\n\n        const adjustPinArray = (arrayName, targetLength) => {\n            const currentArray = pins[arrayName];\n            if (!currentArray) {\n                pins[arrayName] = Array(targetLength).fill([]);\n                return;\n            }\n\n            const currentLength = currentArray.length;\n\n            if (currentLength < targetLength) {\n                // Pad the array\n                const needed = targetLength - currentLength;\n                pins[arrayName] = currentArray.concat(Array(needed).fill([]));\n            } else if (currentLength > targetLength) {\n                // Truncate the array\n                console.warn(\n                    `Builder: Pin array '${arrayName}' has ${currentLength} elements, but expected ${targetLength}. \n                    Truncating excess elements.`\n                );\n                pins[arrayName] = currentArray.slice(0, targetLength);\n            }\n        };\n\n        // Adjust vertical arrays (left, right) based on height\n        adjustPinArray('left', height);\n        adjustPinArray('right', height);\n\n        // Adjust horizontal arrays (top, bottom) based on width\n        adjustPinArray('top', width);\n        adjustPinArray('bottom', width);\n    }\n\n    /**\n     * Creates a pin with its labels\n     * @param {string} row The row identifier ('left', 'right', 'top', 'bottom')\n     * @param {number} pinIndex The index of the pin in the row\n     * @param {string} alignment The alignment of labels ('leftof', 'rightof', 'above', 'under')\n     * @returns {Group} A group containing the pin and its labels\n     */\n    createPinWithLabels(row, pinIndex, alignment) {\n        const group = new Group();\n        const pos = this.pinPosition(row, pinIndex);\n        const pinElement = new Circle(pos.x, pos.y, PINSIZE, 'gold');\n        group.append(pinElement);\n\n        let last = pinElement;\n        this.setup.pins[row][pinIndex].forEach((pindata, index) => {\n            const [text, type] = pindata.split(':');\n            const {bgcolor, fgcolor} = this.setup.types[type] || this.setup.types.default;\n\n            const label = new PinLabel(text, {\n                backgroundColor: bgcolor,\n                textColor: fgcolor,\n            });\n            label.align(alignment, last, index ? PADDING : PADDING * 3); // add more padding for the first label\n            group.append(label);\n            last = label;\n        });\n\n        return group;\n    }\n\n    /**\n     * Creates a row of pins\n     * @param {string} row The row identifier ('left', 'right', 'top', 'bottom')\n     * @param {string} alignment The alignment of labels ('leftof', 'rightof', 'above', 'under')\n     * @returns {Group} A group containing all pins in the row\n     */\n    createPinRow(row, alignment) {\n        const rowGroup = new Group();\n        const pinCount = this.setup.pins[row].length;\n\n        for (let pin = 0; pin < pinCount; pin++) {\n            if (!this.setup.pins[row][pin]) continue; // pin is null\n            if (!this.setup.pins[row][pin].length) continue; // No definition for this pin, skip it\n            const pinGroup = this.createPinWithLabels(row, pin, alignment);\n            rowGroup.append(pinGroup);\n        }\n\n        return rowGroup;\n    }\n\n    /**\n     *\n     * @param {string} row The row to get the pin position for. Can be 'left', 'right', 'top', or 'bottom'.\n     * @param {int} pin The pin number in the row.\n     * @returns {{x: number, y: number}} The x and y coordinates of the pin position.\n     */\n    pinPosition(row, pin) {\n        switch (row) {\n            case 'left':\n                return {\n                    x: this.setup.offsets.left * PINSPACE,\n                    y: pin * PINSPACE\n                };\n            case 'right':\n                return {\n                    x: (this.setup.width - 1 - this.setup.offsets.right) * PINSPACE,\n                    y: pin * PINSPACE\n                };\n            case 'top':\n                return {\n                    x: pin * PINSPACE,\n                    y: this.setup.offsets.top * PINSPACE\n                };\n            case 'bottom':\n                return {\n                    x: pin * PINSPACE,\n                    y: (this.setup.height - 1 - this.setup.offsets.bottom) * PINSPACE\n                };\n            default:\n                throw new Error(`Invalid row: ${row}`);\n        }\n    }\n}\n", "import {Group} from \"../elements/Group.js\";\n\nexport class RootGroup extends Group {\n\n    constructor() {\n        super({\n            id: 'root',\n        });\n    }\n\n    /**\n     * Moves the group to the origin (0, 0) of the coordinate system.\n     */\n    reframe() {\n        const bBox = this.getBoundingBox();\n        this.setTranslate(0 - bBox.x, 0 - bBox.y);\n    }\n}\n", "// Basic environment detection\nconst isNode = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n\n/**\n * Handles embedding images as data URIs, supporting both Node.js and browser environments.\n * In Node.js, it fetches remote URLs or reads local files directly.\n * In the browser, it utilizes a remote service to fetch and convert images.\n * Only supports JPEG and PNG image types.\n */\nexport class ImageEmbed {\n    /**\n     * The URL of the Cloudflare worker used for transforming images to data URIs in the browser.\n     * @type {string}\n     * @static\n     */\n    static SERVICE = 'https://imgdataurl.splitbrain.workers.dev/';\n\n    /**\n     * @param {string} base The relative base to look for local images in\n     */\n    constructor(base = '') {\n        this.base = base;\n    }\n\n    /**\n     * Processes a setup object, attempting to embed images specified in\n     * `setup.image.front.src` and `setup.image.back.src`.\n     *\n     * It modifies the `setup` object *in place*, replacing the `src` properties\n     * with data URIs upon successful embedding. If embedding fails for an image,\n     * a warning is logged, and the original `src` value is retained.\n     *\n     * @param {object} setup - The setup configuration object. Expected to potentially have `setup.image.front.src` and `setup.image.back.src`.\n     * @returns {Promise<object>} A promise that resolves with the (potentially modified) setup object.\n     */\n    async embedImages(setup) {\n        const imageConfigsToProcess = [];\n        // Collect image sources to process, storing references to the config objects\n        if (setup?.image?.front?.src) {\n            imageConfigsToProcess.push({config: setup.image.front, originalSrc: setup.image.front.src});\n        }\n        if (setup?.image?.back?.src) {\n            imageConfigsToProcess.push({config: setup.image.back, originalSrc: setup.image.back.src});\n        }\n\n        if (imageConfigsToProcess.length === 0) {\n            return setup; // No images defined in the setup\n        }\n\n        // Create embedding promises for all identified image sources\n        const embedPromises = imageConfigsToProcess.map(item => {\n            return this.embed(item.originalSrc);\n        });\n\n        // Wait for all embedding attempts to complete (success or failure)\n        const results = await Promise.allSettled(embedPromises);\n\n        // Update the setup object based on the results\n        results.forEach((result, index) => {\n            const item = imageConfigsToProcess[index];\n            if (result.status === 'fulfilled') {\n                // Embed successful: Update the src in the original setup object\n                item.config.src = result.value;\n            } else {\n                // Embed failed: Log a warning, leave the original src untouched\n                console.warn(`Failed to embed image \"${item.originalSrc}\": ${result.reason?.message || result.reason}. Keeping original source.`);\n            }\n        });\n\n        return setup; // Return the modified setup object\n    }\n\n    /**\n     * Embeds an image from a URL or local file path into a data URI.\n     * Determines the environment (Node.js or browser) and calls the appropriate embedding method.\n     *\n     * @param {string} source - The URL (http/https) or local file path of the image.\n     * @returns {Promise<string>} A promise that resolves with the image data URI (e.g., \"data:image/png;base64,...\").\n     * @throws {Error} If the source is empty, fetching/reading fails, or the image type is unsupported.\n     */\n    async embed(source) {\n        if (!source) {\n            throw new Error(\"Image source cannot be empty.\");\n        }\n\n        if (isNode) {\n            return this.embedNode(source);\n        } else {\n            return this.embedBrowser(source);\n        }\n    }\n\n    /**\n     * Embeds an image in a Node.js environment.\n     * Fetches remote URLs or reads local files directly, determines the MIME type,\n     * and converts the image data to a base64 data URI.\n     * Supports only JPEG and PNG images.\n     *\n     * @param {string} source - The URL (http/https) or local file path of the image.\n     * @returns {Promise<string>} A promise that resolves with the image data URI.\n     * @throws {Error} If fetching/reading fails or the image type is unsupported.\n     * @private\n     */\n    async embedNode(source) {\n        // dynamic import to avoid issues in browser environments\n        const fs = await import('fs/promises');\n        const path = await import('path');\n\n        let buffer;\n        let mimeType;\n\n        if (source.startsWith('http://') || source.startsWith('https://')) {\n            const response = await fetch(source);\n            if (!response.ok) {\n                throw new Error(`Failed to fetch image '${source}': ${response.status} ${response.statusText}`);\n            }\n            buffer = Buffer.from(await response.arrayBuffer());\n            mimeType = response.headers.get('content-type')?.split(';')[0].toLowerCase();\n        } else {\n            source = this.base ? path.join(this.base, source) : source;\n\n            buffer = await fs.readFile(source);\n            const extension = path.extname(source).toLowerCase();\n            if (extension === '.jpg' || extension === '.jpeg') {\n                mimeType = 'image/jpeg';\n            } else if (extension === '.png') {\n                mimeType = 'image/png';\n            } else {\n                mimeType = null; // Will be caught by validation below\n            }\n        }\n\n        if (mimeType !== 'image/jpeg' && mimeType !== 'image/png') {\n            throw new Error(`Unsupported image type for source \"${source}\". Only JPEG and PNG are supported. Detected type: ${mimeType || 'unknown'}`);\n        }\n\n        const base64 = buffer.toString('base64');\n        const dataUri = `data:${mimeType};base64,${base64}`;\n        console.debug(`Generated data URI for ${source} (length: ${dataUri.length})`);\n        return dataUri;\n    }\n\n    /**\n     * Embeds an image in a browser environment by calling a remote service.\n     * The service is expected to handle fetching/conversion and return the data URI.\n     *\n     * @param {string} source - The URL (http/https) or potentially a path resolvable by the service.\n     * @returns {Promise<string>} A promise that resolves with the image data URI.\n     * @throws {Error} If the service call fails or returns an invalid response.\n     * @private\n     */\n    async embedBrowser(source) {\n\n        // this is not a URL, so we assume it to be one of our own, locally served files\n        if (!source.match(/^https?:\\/\\//)) {\n            if (this.base) {\n                source = `${this.base}/${source}`;\n            }\n            source = new URL(source, window.location.href).toString();\n            if (source.match(/^http:\\/\\/(localhost|127.0.0.1)/)) return source; // no local embeds\n        }\n\n        const embedServiceUrl = `${ImageEmbed.SERVICE}?url=${encodeURIComponent(source)}`;\n        const response = await fetch(embedServiceUrl);\n        if (!response.ok) {\n            throw new Error(`Failed to fetch data URI from service for '${source}': ${response.status} ${response.statusText}`);\n        }\n\n        const dataUri = await response.text();\n        // Basic validation that the response looks like a data URI\n        if (typeof dataUri !== 'string' || !dataUri.startsWith('data:')) {\n            throw new Error(`Invalid response from embed service for source \"${source}\". Expected data URI, got: ${dataUri.substring(0, 100)}...`);\n        }\n        console.debug(`Received data URI for ${source} (length: ${dataUri.length})`);\n        return dataUri;\n    }\n\n}\n"],
  "mappings": "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",
  "names": ["require_lodash", "__commonJSMin", "exports", "module", "LARGE_ARRAY_SIZE", "HASH_UNDEFINED", "HOT_COUNT", "HOT_SPAN", "MAX_SAFE_INTEGER", "argsTag", "arrayTag", "asyncTag", "boolTag", "dateTag", "errorTag", "funcTag", "genTag", "mapTag", "numberTag", "nullTag", "objectTag", "proxyTag", "regexpTag", "setTag", "stringTag", "undefinedTag", "weakMapTag", "arrayBufferTag", "dataViewTag", "float32Tag", "float64Tag", "int8Tag", "int16Tag", "int32Tag", "uint8Tag", "uint8ClampedTag", "uint16Tag", "uint32Tag", "reRegExpChar", "reIsHostCtor", "reIsUint", "typedArrayTags", "freeGlobal", "freeSelf", "root", "freeExports", "freeModule", "moduleExports", "freeProcess", "nodeUtil", "types", "nodeIsTypedArray", "apply", "func", "thisArg", "args", "baseTimes", "n", "iteratee", "index", "result", "baseUnary", "value", "getValue", "object", "key", "overArg", "transform", "arg", "arrayProto", "funcProto", "objectProto", "coreJsData", "funcToString", "hasOwnProperty", "maskSrcKey", "uid", "nativeObjectToString", "objectCtorString", "reIsNative", "Buffer", "Symbol", "Uint8Array", "allocUnsafe", "getPrototype", "objectCreate", "propertyIsEnumerable", "splice", "symToStringTag", "defineProperty", "getNative", "nativeIsBuffer", "nativeMax", "nativeNow", "Map", "nativeCreate", "baseCreate", "proto", "isObject", "Hash", "entries", "length", "entry", "hashClear", "hashDelete", "hashGet", "data", "hashHas", "hashSet", "ListCache", "listCacheClear", "listCacheDelete", "assocIndexOf", "lastIndex", "listCacheGet", "listCacheHas", "listCacheSet", "MapCache", "mapCacheClear", "mapCacheDelete", "getMapData", "mapCacheGet", "mapCacheHas", "mapCacheSet", "size", "Stack", "stackClear", "stackDelete", "stackGet", "stackHas", "stackSet", "pairs", "arrayLikeKeys", "inherited", "isArr", "isArray", "isArg", "isArguments", "isBuff", "isBuffer", "isType", "isTypedArray", "skipIndexes", "isIndex", "assignMergeValue", "eq", "baseAssignValue", "assignValue", "objValue", "array", "baseFor", "createBaseFor", "baseGetTag", "getRawTag", "objectToString", "baseIsArguments", "isObjectLike", "baseIsNative", "isMasked", "pattern", "isFunction", "toSource", "baseIsTypedArray", "isLength", "baseKeysIn", "nativeKeysIn", "isProto", "isPrototype", "baseMerge", "source", "srcIndex", "customizer", "stack", "srcValue", "baseMergeDeep", "newValue", "safeGet", "keysIn", "mergeFunc", "stacked", "isCommon", "isTyped", "isArrayLikeObject", "copyArray", "cloneBuffer", "cloneTypedArray", "isPlainObject", "toPlainObject", "initCloneObject", "baseRest", "start", "setToString", "overRest", "identity", "baseSetToString", "string", "constant", "buffer", "isDeep", "cloneArrayBuffer", "arrayBuffer", "typedArray", "copyObject", "props", "isNew", "createAssigner", "assigner", "sources", "guard", "isIterateeCall", "fromRight", "keysFunc", "iterable", "map", "isKeyable", "isOwn", "tag", "unmasked", "type", "isArrayLike", "Ctor", "otherArgs", "shortOut", "count", "lastCalled", "stamp", "remaining", "other", "stubFalse", "merge", "createWindow", "BaseElement", "name", "attrs", "children", "child", "value", "elements", "minX", "minY", "maxX", "maxY", "hasValidBounds", "element", "bbox", "document", "el", "key", "val", "Defs", "BaseElement", "children", "style", "roboto_mono_latin_500_normal_default", "filter", "document", "el", "child", "childEl", "SvgRoot", "BaseElement", "Defs", "bbox", "Group", "BaseElement", "attrs", "children", "tx", "ty", "angle", "bbox", "cx", "cy", "transformedCorners", "p", "relX", "relY", "rotatedX", "rotatedY", "minX", "minY", "maxX", "maxY", "document", "el", "transformValue", "translatePart", "rotatePart", "Circle", "BaseElement", "cx", "cy", "r", "fill", "Rect", "BaseElement", "x", "y", "width", "height", "attrs", "strokeWidth", "Text", "BaseElement", "x", "y", "text", "attrs", "fontSize", "estimatedWidth", "document", "PinLabel", "Group", "text", "options", "padding", "borderRadius", "backgroundColor", "textColor", "textElement", "Text", "textBBox", "rect", "Rect", "alignment", "reference", "myBBox", "refBBox", "labelCx", "labelCy", "refCx", "refCy", "targetCx", "targetCy", "rotationAngle", "translateX", "translateY", "LegendItem", "Group", "labelText", "backgroundColor", "options", "borderRadius", "swatch", "Rect", "label", "Text", "Legend", "Group", "allTypes", "pinsData", "usedTypes", "items", "itemsBBox", "BaseElement", "background", "usedTypeInfo", "rowKey", "pinLabels", "labelData", "parts", "typeName", "typeDefinition", "currentY", "a", "b", "itemData", "legendItem", "LegendItem", "itemBBox", "Rect", "Title", "Group", "titleText", "options", "fontSize", "titleElement", "Text", "Image", "BaseElement", "x", "y", "width", "height", "href", "attrs", "Pcb", "Group", "widthInPins", "heightInPins", "image", "options", "fill", "padding", "pcbWidth", "pcbHeight", "pcbX", "pcbY", "imgElement", "basePcbX", "basePcbY", "basePcbWidth", "basePcbHeight", "imageConfig", "src", "top", "left", "right", "bottom", "opacity", "preserveAspectRatio", "imgX", "imgY", "imgWidth", "imgHeight", "Image", "Rect", "import_lodash", "RootGroup", "Group", "bBox", "Builder", "setup", "merge", "svg", "SvgRoot", "root", "RootGroup", "pinLayoutGroup", "Group", "pcb", "Pcb", "title", "Title", "legend", "Legend", "pinLayoutBBox", "legendBBox", "titleBBox", "tempLeftPins", "tempLeftOffset", "tempFrontImage", "width", "height", "pins", "adjustPinArray", "arrayName", "targetLength", "currentArray", "currentLength", "needed", "row", "pinIndex", "alignment", "group", "pos", "pinElement", "Circle", "last", "pindata", "index", "text", "type", "bgcolor", "fgcolor", "label", "PinLabel", "rowGroup", "pinCount", "pin", "pinGroup", "Yaml", "readdir", "readFile", "stat", "writeFile", "join", "dirname", "isNode", "ImageEmbed", "_ImageEmbed", "base", "setup", "imageConfigsToProcess", "embedPromises", "item", "result", "index", "source", "fs", "path", "buffer", "mimeType", "response", "extension", "base64", "dataUri", "embedServiceUrl", "printHelp", "processDir", "dir", "errors", "files", "readdir", "file", "filePath", "join", "stat", "processFile", "statError", "readDirError", "data", "readFile", "setup", "Yaml", "ImageEmbed", "dirname", "outputBase", "builder", "Builder", "window", "createWindow", "frontSvgContent", "writeFile", "backSvgContent", "main", "args", "arg", "stats", "error"]
}
